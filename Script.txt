#!/bin/bash

# Função para verificar se o nmap está instalado
check_nmap() {
    if ! command -v nmap &> /dev/null; then
        echo "O Nmap não está instalado. Por favor, instale o Nmap para continuar."
        exit 1
    fi
}

# Função para exibir o uso do script
usage() {
    echo "Uso: $0"
    echo "Este script solicita interativamente as informações necessárias para análise."
    exit 1
}

# Função para realizar a varredura e gerar relatórios
scan_target() {
    local alvo=$1
    local timing=$2
    local portas=$3
    local vulns=$4

    local file="relatorio_${alvo}.html"

    # Criando um relatório HTML formatado
    echo "<html><head><title>Relatório de Análise - $alvo</title></head><body>" > "$file"
    echo "<h1>Análise de Segurança - $alvo</h1>" >> "$file"

    # Criando arquivos temporários seguros
    local tmp_tcp=$(mktemp)
    local tmp_udp=$(mktemp)
    local tmp_services=$(mktemp)
    local tmp_os=$(mktemp)
    local tmp_vulns=$(mktemp)

    echo "<h2>Varredura de Portas TCP</h2><pre>" >> "$file"
    sudo nmap -T"$timing" -sS "$alvo" "$portas" -oN "$tmp_tcp"
    cat "$tmp_tcp" >> "$file"
    echo "</pre>" >> "$file"

    echo "<h2>Varredura de Portas UDP</h2><pre>" >> "$file"
    sudo nmap -T"$timing" -sU "$alvo" "$portas" -oN "$tmp_udp"
    cat "$tmp_udp" >> "$file"
    echo "</pre>" >> "$file"

    echo "<h2>Identificação de Serviços</h2><pre>" >> "$file"
    sudo nmap -T"$timing" -sV "$alvo" "$portas" -oN "$tmp_services"
    cat "$tmp_services" >> "$file"
    echo "</pre>" >> "$file"

    echo "<h2>Detecção do Sistema Operacional</h2><pre>" >> "$file"
    sudo nmap -T"$timing" -O "$alvo" -oN "$tmp_os"
    cat "$tmp_os" >> "$file"
    echo "</pre>" >> "$file"

    if [ "$vulns" = true ]; then
        echo "<h2>Varredura de Vulnerabilidades</h2><pre>" >> "$file"
        sudo nmap -T"$timing" --script vuln "$alvo" "$portas" -oN "$tmp_vulns"
        cat "$tmp_vulns" >> "$file"
        echo "</pre>" >> "$file"
    fi

    echo "</body></html>" >> "$file"

    # Limpeza de arquivos temporários
    rm -f "$tmp_tcp" "$tmp_udp" "$tmp_services" "$tmp_os" "$tmp_vulns"

    echo "Scan concluído. Relatório salvo em: $file"
}

# Solicita as entradas do usuário
echo "Por favor, informe as seguintes informações:"

read -p "Alvo (ex: 192.168.1.1): " alvo
read -p "Timing (0-5): " timing
read -p "Portas específicas (opcional, ex: 80,443): " portas_input
read -p "Deseja ativar a varredura de vulnerabilidades? (s/n): " vulns_input

# Configura variáveis com base na entrada do usuário
portas=${portas_input:+-p $portas_input}
vulns=false

if [[ "$vulns_input" =~ ^[sS]$ ]]; then
    vulns=true
fi

# Verifica se os parâmetros obrigatórios foram fornecidos
if [ -z "$alvo" ] || [ -z "$timing" ]; then
    echo "O alvo e o timing são obrigatórios."
    usage
fi

# Verifica se o valor de timing é válido
if [[ ! "$timing" =~ ^[0-5]$ ]]; then
    echo "O valor de timing deve estar entre 0 e 5."
    exit 1
fi

# Executa a análise do alvo
check_nmap
scan_target "$alvo" "$timing" "$portas" "$vulns"
